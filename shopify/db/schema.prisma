generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ShopifyAccount {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  shopId          String
  myShopifyDomain String   @unique
  accessToken     String

  // This could be on a per resource basis.
  backfillEndedAt       DateTime?
  hasRegisteredWebhooks Boolean   @default(false)

  ShopifyOrder          ShopifyOrder[]
  ShopifyProduct        ShopifyProduct[]
  ShopifyCustomer       ShopifyCustomer[]
  ShopifyProductVariant ShopifyProductVariant[]
}

//

model ShopifyOrder {
  id         String    @id
  created_at DateTime
  updated_at DateTime?

  accountId      String
  shopifyAccount ShopifyAccount @relation(fields: [accountId], references: [id], onDelete: Cascade)

  name                        String?
  note                        String?
  tags                        String?
  test                        Boolean?
  email                       String?
  phone                       String?
  token                       String?
  app_id                      String?
  number                      Int?
  gateway                     String?
  refunds                     Json[]
  user_id                     String?
  currency                    String?
  customer                    Json?
  shop_url                    String?
  closed_at                   String?
  confirmed                   Boolean?
  device_id                   String?
  reference                   String?
  tax_lines                   Json[]
  total_tax                   Float?
  browser_ip                  String?
  cart_token                  String?
  line_items                  Json[]
  source_url                  String?
  checkout_id                 String?
  location_id                 String?
  source_name                 String?
  total_price                 Float?
  cancelled_at                String?
  fulfillments                Json[]
  landing_site                String?
  order_number                Int?
  processed_at                String?
  total_weight                Int?
  cancel_reason               String?
  contact_email               String?
  total_tax_set               Json?
  checkout_token              String?
  client_details              Json?
  discount_codes              Json[]
  referring_site              String?
  shipping_lines              Json[]
  subtotal_price              Float?
  taxes_included              Boolean?
  billing_address             Json?
  customer_locale             String?
  note_attributes             Json[]
  payment_details             Json?
  total_discounts             Float?
  total_price_set             Json?
  total_price_usd             Float?
  financial_status            String?
  landing_site_ref            String?
  order_status_url            String?
  shipping_address            Json?
  current_total_tax           Float?
  processing_method           String?
  source_identifier           String?
  total_outstanding           Float?
  fulfillment_status          String?
  subtotal_price_set          Json?
  total_tip_received          Float?
  current_total_price         Float?
  total_discounts_set         Json?
  admin_graphql_api_id        String?
  discount_allocations        Json[]
  presentment_currency        String?
  current_total_tax_set       Json?
  payment_gateway_names       String[]
  current_subtotal_price      Float?
  total_line_items_price      Float?
  buyer_accepts_marketing     Boolean?
  current_total_discounts     Float?
  current_total_price_set     Json?
  current_total_duties_set    String?
  total_shipping_price_set    Json?
  original_total_duties_set   String?
  current_subtotal_price_set  Json?
  total_line_items_price_set  Json?
  current_total_discounts_set Json?
  account_id                  String

  @@index([id, account_id])
  @@index([updated_at, account_id])
}

model ShopifyProduct {
  id         String    @id
  created_at DateTime
  updated_at DateTime?

  accountId      String
  shopifyAccount ShopifyAccount @relation(fields: [accountId], references: [id], onDelete: Cascade)

  tags                 String?
  image                Json?
  title                String?
  handle               String?
  images               Json[]
  status               String?
  vendor               String?
  options              Json[]
  shop_url             String?
  variants             Json[]
  body_html            String?
  product_type         String?
  published_at         String?
  published_scope      String?
  template_suffix      String?
  admin_graphql_api_id String?
  account_id           String

  @@index([id, account_id])
  @@index([updated_at, account_id])
}

model ShopifyCustomer {
  id         String    @id
  created_at DateTime
  updated_at DateTime?

  accountId      String
  shopifyAccount ShopifyAccount @relation(fields: [accountId], references: [id], onDelete: Cascade)

  note                         String?
  tags                         String?
  email                        String?
  phone                        String?
  state                        String?
  currency                     String?
  shop_url                     String?
  addresses                    Json[]
  last_name                    String?
  first_name                   String?
  tax_exempt                   Boolean?
  total_spent                  Float?
  orders_count                 Int?
  last_order_id                String?
  verified_email               Boolean?
  default_address              Json?
  last_order_name              String?
  accepts_marketing            Boolean?
  admin_graphql_api_id         String?
  multipass_identifier         String?
  accepts_marketing_updated_at String
  account_id                   String

  @@index([id, account_id])
  @@index([updated_at, account_id])
}

model ShopifyProductVariant {
  id         String    @id
  created_at DateTime
  updated_at DateTime?

  accountId      String
  shopifyAccount ShopifyAccount @relation(fields: [accountId], references: [id], onDelete: Cascade)

  sku                    String?
  grams                  Int?
  price                  Float?
  title                  String?
  weight                 Float?
  barcode                String?
  option1                String?
  option2                String?
  option3                String?
  taxable                Boolean?
  image_id               String?
  position               Int?
  tax_code               String?
  weight_unit            String?
  compare_at_price       Float?
  inventory_policy       String?
  inventory_item_id      String?
  requires_shipping      Boolean?
  inventory_quantity     Int?
  presentment_prices     Json[]
  fulfillment_service    String?
  admin_graphql_api_id   String?
  inventory_management   String?
  old_inventory_quantity Int?
  account_id             String

  @@index([id, account_id])
  @@index([updated_at, account_id])
}
